import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;

public class Solution {
	public LinkedList<LinkedList> threeSum(int[] nums) {
		Arrays.sort(nums);
		int target, l, r, temp;
		LinkedList<LinkedList> list = new LinkedList<LinkedList>();
		for (int i = 0; i < nums.length; i++) {
			if (i != 0 && nums[i] == nums[i - 1])
				continue;
			target = nums[i];
			l = i + 1;
			r = nums.length - 1;
			while (l < r) {
				temp = target + nums[l] + nums[r];
				if (temp < 0) {
					l++;
				} else if (temp == 0) {
					while (l < r && nums[l] == nums[l + 1])
						l++;
					while (l < r && nums[r] == nums[r - 1])
						r--;
					LinkedList<Integer> li = new LinkedList<Integer>();
					li.add(target);
					li.add(nums[l]);
					li.add(nums[r]);
					list.add(li);
					l++;
					r--;
				} else {
					r--;
				}
			}
		}
		return list;
	}
}
